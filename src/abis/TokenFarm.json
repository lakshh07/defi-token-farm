{
  "contractName": "TokenFarm",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract DappToken",
          "name": "_dappToken",
          "type": "address"
        },
        {
          "internalType": "contract DaiToken",
          "name": "_daiToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract DaiToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "dappToken",
      "outputs": [
        {
          "internalType": "contract DappToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isStaking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract DappToken\",\"name\":\"_dappToken\",\"type\":\"address\"},{\"internalType\":\"contract DaiToken\",\"name\":\"_daiToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract DaiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dappToken\",\"outputs\":[{\"internalType\":\"contract DappToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasStaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStaking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Projects/Solidity/Stake coin Defi App/src/contracts/TokenFarm.sol\":\"TokenFarm\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Projects/Solidity/Stake coin Defi App/src/contracts/DaiToken.sol\":{\"keccak256\":\"0x8a41bd39a496f4ee2cf2b7bb30c2d8625c75d1777085fd04778de347e7b1b4e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://006109ed311b3c5cbccaf0eddabc968befcfe767d2def16eaaf33fdde0682c57\",\"dweb:/ipfs/QmZJjVHiQTMx9nq9DZpbeHBqxbJen2WALYq6XbyYiSdFPF\"]},\"/D/Projects/Solidity/Stake coin Defi App/src/contracts/DappToken.sol\":{\"keccak256\":\"0x9596f1af811ef280ef8dc855cd89e529bef83f2c889b34411da427204c5e46e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db142ce32c0ce0ddeedb02dfde74b65c9193f48e6c182bfca4e4d120d081f654\",\"dweb:/ipfs/QmTB8hnsgwTdgdb2Sy32wMb5EQSeCUPxQMRomh6Cm7G1X9\"]},\"/D/Projects/Solidity/Stake coin Defi App/src/contracts/TokenFarm.sol\":{\"keccak256\":\"0x83ceeb8b570d191e71fd9cd9328d01a1c3d20e023f5772a75a681a92a9eb35dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70986c238a14434b01d2736a62e0a3944bb67b56bd72060a16f7fd5ccc77f3d5\",\"dweb:/ipfs/QmX9hYsH2WAs9JYYqfoYfQSsTRhnVmtgyqiGKM9RVxfxqU\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600f81526020017f4461707020546f6b656e204661726d0000000000000000000000000000000000815250600090805190602001906200005192919062000150565b503480156200005f57600080fd5b50604051620014273803806200142783398181016040528101906200008591906200022e565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000364565b8280546200015e90620002cb565b90600052602060002090601f016020900481019282620001825760008555620001ce565b82601f106200019d57805160ff1916838001178555620001ce565b82800160010185558215620001ce579182015b82811115620001cd578251825591602001919060010190620001b0565b5b509050620001dd9190620001e1565b5090565b5b80821115620001fc576000816000905550600101620001e2565b5090565b600081519050620002118162000330565b92915050565b60008151905062000228816200034a565b92915050565b600080604083850312156200024257600080fd5b6000620002528582860162000217565b9250506020620002658582860162000200565b9150509250929050565b60006200027c82620002ab565b9050919050565b600062000290826200026f565b9050919050565b6000620002a4826200026f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006002820490506001821680620002e457607f821691505b60208210811415620002fb57620002fa62000301565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6200033b8162000283565b81146200034757600080fd5b50565b620003558162000297565b81146200036157600080fd5b50565b6110b380620003746000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637547c7a3116100715780637547c7a3146101545780638da5cb5b14610170578063a5ce413b1461018e578063be22f54614610198578063c93c8f34146101b6578063fd5e6dd1146101e6576100a9565b806306fdde03146100ae57806345bc78ab146100cc5780635eb186f8146100fc57806360ab58521461011a5780636f49712b14610124575b600080fd5b6100b6610216565b6040516100c39190610d01565b60405180910390f35b6100e660048036038101906100e19190610acd565b6102a4565b6040516100f39190610d83565b60405180910390f35b6101046102bc565b6040516101119190610ce6565b60405180910390f35b6101226102e2565b005b61013e60048036038101906101399190610acd565b610501565b60405161014b9190610cb0565b60405180910390f35b61016e60048036038101906101699190610b1f565b610521565b005b61017861080c565b6040516101859190610c35565b60405180910390f35b610196610832565b005b6101a0610a09565b6040516101ad9190610ccb565b60405180910390f35b6101d060048036038101906101cb9190610acd565b610a2f565b6040516101dd9190610cb0565b60405180910390f35b61020060048036038101906101fb9190610b1f565b610a4f565b60405161020d9190610c35565b60405180910390f35b6000805461022390610ed3565b80601f016020809104026020016040519081016040528092919081815260200182805461024f90610ed3565b801561029c5780601f106102715761010080835404028352916020019161029c565b820191906000526020600020905b81548152906001019060200180831161027f57829003601f168201915b505050505081565b60056020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036990610d23565b60405180910390fd5b60005b6004805490508110156104fe576000600482815481106103be577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156104e957600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610495929190610c87565b602060405180830381600087803b1580156104af57600080fd5b505af11580156104c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e79190610af6565b505b505080806104f690610f05565b915050610375565b50565b60076020528060005260406000206000915054906101000a900460ff1681565b60008111610564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055b90610d63565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105c393929190610c50565b602060405180830381600087803b1580156105dd57600080fd5b505af11580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106159190610af6565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106619190610dba565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610759576004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090610d43565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610916929190610c87565b602060405180830381600087803b15801561093057600080fd5b505af1158015610944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109689190610af6565b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915054906101000a900460ff1681565b60048181548110610a5f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081359050610a9d81611038565b92915050565b600081519050610ab28161104f565b92915050565b600081359050610ac781611066565b92915050565b600060208284031215610adf57600080fd5b6000610aed84828501610a8e565b91505092915050565b600060208284031215610b0857600080fd5b6000610b1684828501610aa3565b91505092915050565b600060208284031215610b3157600080fd5b6000610b3f84828501610ab8565b91505092915050565b610b5181610e10565b82525050565b610b6081610e22565b82525050565b610b6f81610e58565b82525050565b610b7e81610e7c565b82525050565b6000610b8f82610d9e565b610b998185610da9565b9350610ba9818560208601610ea0565b610bb281610fac565b840191505092915050565b6000610bca601883610da9565b9150610bd582610fbd565b602082019050919050565b6000610bed601b83610da9565b9150610bf882610fe6565b602082019050919050565b6000610c10601283610da9565b9150610c1b8261100f565b602082019050919050565b610c2f81610e4e565b82525050565b6000602082019050610c4a6000830184610b48565b92915050565b6000606082019050610c656000830186610b48565b610c726020830185610b48565b610c7f6040830184610c26565b949350505050565b6000604082019050610c9c6000830185610b48565b610ca96020830184610c26565b9392505050565b6000602082019050610cc56000830184610b57565b92915050565b6000602082019050610ce06000830184610b66565b92915050565b6000602082019050610cfb6000830184610b75565b92915050565b60006020820190508181036000830152610d1b8184610b84565b905092915050565b60006020820190508181036000830152610d3c81610bbd565b9050919050565b60006020820190508181036000830152610d5c81610be0565b9050919050565b60006020820190508181036000830152610d7c81610c03565b9050919050565b6000602082019050610d986000830184610c26565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610dc582610e4e565b9150610dd083610e4e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e0557610e04610f4e565b5b828201905092915050565b6000610e1b82610e2e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e6382610e6a565b9050919050565b6000610e7582610e2e565b9050919050565b6000610e8782610e8e565b9050919050565b6000610e9982610e2e565b9050919050565b60005b83811015610ebe578082015181840152602081019050610ea3565b83811115610ecd576000848401525b50505050565b60006002820490506001821680610eeb57607f821691505b60208210811415610eff57610efe610f7d565b5b50919050565b6000610f1082610e4e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f4357610f42610f4e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f63616c6c6572206d75737420626520746865206f776e65720000000000000000600082015250565b7f7374616b696e672062616c616e63652063616e6e6f7420626520300000000000600082015250565b7f616d6f756e742063616e6e6f7420626520300000000000000000000000000000600082015250565b61104181610e10565b811461104c57600080fd5b50565b61105881610e22565b811461106357600080fd5b50565b61106f81610e4e565b811461107a57600080fd5b5056fea264697066735822122099f9870f7de68af90dec497f28a917972e9eda9e44cb397205dca9f9bef0714264736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80637547c7a3116100715780637547c7a3146101545780638da5cb5b14610170578063a5ce413b1461018e578063be22f54614610198578063c93c8f34146101b6578063fd5e6dd1146101e6576100a9565b806306fdde03146100ae57806345bc78ab146100cc5780635eb186f8146100fc57806360ab58521461011a5780636f49712b14610124575b600080fd5b6100b6610216565b6040516100c39190610d01565b60405180910390f35b6100e660048036038101906100e19190610acd565b6102a4565b6040516100f39190610d83565b60405180910390f35b6101046102bc565b6040516101119190610ce6565b60405180910390f35b6101226102e2565b005b61013e60048036038101906101399190610acd565b610501565b60405161014b9190610cb0565b60405180910390f35b61016e60048036038101906101699190610b1f565b610521565b005b61017861080c565b6040516101859190610c35565b60405180910390f35b610196610832565b005b6101a0610a09565b6040516101ad9190610ccb565b60405180910390f35b6101d060048036038101906101cb9190610acd565b610a2f565b6040516101dd9190610cb0565b60405180910390f35b61020060048036038101906101fb9190610b1f565b610a4f565b60405161020d9190610c35565b60405180910390f35b6000805461022390610ed3565b80601f016020809104026020016040519081016040528092919081815260200182805461024f90610ed3565b801561029c5780601f106102715761010080835404028352916020019161029c565b820191906000526020600020905b81548152906001019060200180831161027f57829003601f168201915b505050505081565b60056020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036990610d23565b60405180910390fd5b60005b6004805490508110156104fe576000600482815481106103be577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156104e957600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610495929190610c87565b602060405180830381600087803b1580156104af57600080fd5b505af11580156104c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e79190610af6565b505b505080806104f690610f05565b915050610375565b50565b60076020528060005260406000206000915054906101000a900460ff1681565b60008111610564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055b90610d63565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105c393929190610c50565b602060405180830381600087803b1580156105dd57600080fd5b505af11580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106159190610af6565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106619190610dba565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610759576004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090610d43565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610916929190610c87565b602060405180830381600087803b15801561093057600080fd5b505af1158015610944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109689190610af6565b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915054906101000a900460ff1681565b60048181548110610a5f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081359050610a9d81611038565b92915050565b600081519050610ab28161104f565b92915050565b600081359050610ac781611066565b92915050565b600060208284031215610adf57600080fd5b6000610aed84828501610a8e565b91505092915050565b600060208284031215610b0857600080fd5b6000610b1684828501610aa3565b91505092915050565b600060208284031215610b3157600080fd5b6000610b3f84828501610ab8565b91505092915050565b610b5181610e10565b82525050565b610b6081610e22565b82525050565b610b6f81610e58565b82525050565b610b7e81610e7c565b82525050565b6000610b8f82610d9e565b610b998185610da9565b9350610ba9818560208601610ea0565b610bb281610fac565b840191505092915050565b6000610bca601883610da9565b9150610bd582610fbd565b602082019050919050565b6000610bed601b83610da9565b9150610bf882610fe6565b602082019050919050565b6000610c10601283610da9565b9150610c1b8261100f565b602082019050919050565b610c2f81610e4e565b82525050565b6000602082019050610c4a6000830184610b48565b92915050565b6000606082019050610c656000830186610b48565b610c726020830185610b48565b610c7f6040830184610c26565b949350505050565b6000604082019050610c9c6000830185610b48565b610ca96020830184610c26565b9392505050565b6000602082019050610cc56000830184610b57565b92915050565b6000602082019050610ce06000830184610b66565b92915050565b6000602082019050610cfb6000830184610b75565b92915050565b60006020820190508181036000830152610d1b8184610b84565b905092915050565b60006020820190508181036000830152610d3c81610bbd565b9050919050565b60006020820190508181036000830152610d5c81610be0565b9050919050565b60006020820190508181036000830152610d7c81610c03565b9050919050565b6000602082019050610d986000830184610c26565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610dc582610e4e565b9150610dd083610e4e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e0557610e04610f4e565b5b828201905092915050565b6000610e1b82610e2e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e6382610e6a565b9050919050565b6000610e7582610e2e565b9050919050565b6000610e8782610e8e565b9050919050565b6000610e9982610e2e565b9050919050565b60005b83811015610ebe578082015181840152602081019050610ea3565b83811115610ecd576000848401525b50505050565b60006002820490506001821680610eeb57607f821691505b60208210811415610eff57610efe610f7d565b5b50919050565b6000610f1082610e4e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f4357610f42610f4e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f63616c6c6572206d75737420626520746865206f776e65720000000000000000600082015250565b7f7374616b696e672062616c616e63652063616e6e6f7420626520300000000000600082015250565b7f616d6f756e742063616e6e6f7420626520300000000000000000000000000000600082015250565b61104181610e10565b811461104c57600080fd5b50565b61105881610e22565b811461106357600080fd5b50565b61106f81610e4e565b811461107a57600080fd5b5056fea264697066735822122099f9870f7de68af90dec497f28a917972e9eda9e44cb397205dca9f9bef0714264736f6c63430008010033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2185:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "86:96:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "96:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "111:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "105:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "96:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "170:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_DaiToken_$180",
                      "nodeType": "YulIdentifier",
                      "src": "127:42:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "127:49:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "127:49:4"
                }
              ]
            },
            "name": "abi_decode_t_contract$_DaiToken_$180_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "64:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "72:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "80:5:4",
                "type": ""
              }
            ],
            "src": "7:175:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "268:97:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "278:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "293:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "287:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "287:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "278:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "353:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_DappToken_$361",
                      "nodeType": "YulIdentifier",
                      "src": "309:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "309:50:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "309:50:4"
                }
              ]
            },
            "name": "abi_decode_t_contract$_DappToken_$361_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "246:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "254:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "262:5:4",
                "type": ""
              }
            ],
            "src": "188:177:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "498:379:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "544:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "553:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "556:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "546:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "546:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "546:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "519:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "528:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "515:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "515:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "540:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "511:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "511:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "508:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "570:145:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "585:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "599:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "589:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "614:91:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "677:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "688:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "673:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "673:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "697:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_DappToken_$361_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "624:48:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "624:81:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "614:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "725:145:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "740:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "754:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "744:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "770:90:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "832:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "843:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "828:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "828:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "852:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_DaiToken_$180_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "780:47:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:80:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "770:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DappToken_$361t_contract$_DaiToken_$180_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "460:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "471:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "483:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "491:6:4",
                "type": ""
              }
            ],
            "src": "371:506:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "928:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "938:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "967:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "949:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "949:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "938:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "910:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "920:7:4",
                "type": ""
              }
            ],
            "src": "883:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1046:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1056:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1085:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1067:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1067:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1056:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_DaiToken_$180",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1028:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1038:7:4",
                "type": ""
              }
            ],
            "src": "985:112:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1165:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1175:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1204:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1186:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1186:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1175:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_DappToken_$361",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1147:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1157:7:4",
                "type": ""
              }
            ],
            "src": "1103:113:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1267:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1277:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1292:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1299:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1288:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1288:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1277:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1249:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1259:7:4",
                "type": ""
              }
            ],
            "src": "1222:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1405:269:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1415:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1429:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1435:1:4",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1425:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1425:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1415:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1446:38:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1476:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1482:1:4",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1472:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1472:12:4"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1450:18:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1523:51:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1537:27:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1551:6:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1559:4:4",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1547:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1547:17:4"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1537:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1503:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1496:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1496:26:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1493:2:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1626:42:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "1640:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1640:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1640:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1590:18:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1613:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1621:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1610:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1610:14:4"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1587:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1587:38:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1584:2:4"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1389:4:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1398:6:4",
                "type": ""
              }
            ],
            "src": "1354:320:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1708:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1725:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1728:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1718:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1718:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1718:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1822:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1825:4:4",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1815:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1815:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1846:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1849:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1839:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1839:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1839:15:4"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "1680:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1925:95:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1998:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2007:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2010:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2000:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2000:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2000:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1948:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1989:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_DaiToken_$180",
                              "nodeType": "YulIdentifier",
                              "src": "1955:33:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1955:40:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1945:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1945:51:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1938:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1938:59:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1935:2:4"
                }
              ]
            },
            "name": "validator_revert_t_contract$_DaiToken_$180",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1918:5:4",
                "type": ""
              }
            ],
            "src": "1866:154:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2086:96:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2160:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2169:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2172:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2162:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2162:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2162:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2109:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2151:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_DappToken_$361",
                              "nodeType": "YulIdentifier",
                              "src": "2116:34:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2116:41:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2106:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2106:52:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2099:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2099:60:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2096:2:4"
                }
              ]
            },
            "name": "validator_revert_t_contract$_DappToken_$361",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2079:5:4",
                "type": ""
              }
            ],
            "src": "2026:156:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_DaiToken_$180_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_DaiToken_$180(value)\n    }\n\n    function abi_decode_t_contract$_DappToken_$361_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_DappToken_$361(value)\n    }\n\n    function abi_decode_tuple_t_contract$_DappToken_$361t_contract$_DaiToken_$180_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_DappToken_$361_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_DaiToken_$180_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_DaiToken_$180(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_DappToken_$361(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_contract$_DaiToken_$180(value) {\n        if iszero(eq(value, cleanup_t_contract$_DaiToken_$180(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_DappToken_$361(value) {\n        if iszero(eq(value, cleanup_t_contract$_DappToken_$361(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10898:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:4",
                "type": ""
              }
            ],
            "src": "7:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:4"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:4",
                "type": ""
              }
            ],
            "src": "152:137:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "357:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "366:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "357:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "422:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "395:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "395:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "325:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "333:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "341:5:4",
                "type": ""
              }
            ],
            "src": "295:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "506:196:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "552:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "561:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "564:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "554:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "554:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "554:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "527:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "536:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "523:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "523:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "548:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "519:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "516:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "578:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "593:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "607:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "597:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "622:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "657:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "668:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "653:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "653:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "677:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "632:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "632:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "622:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "476:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "487:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "499:6:4",
                "type": ""
              }
            ],
            "src": "440:262:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "782:204:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "828:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "837:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "840:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "830:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "830:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "830:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "803:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "812:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "799:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "799:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "824:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "795:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "795:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "792:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "854:125:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "869:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "883:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "873:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "898:71:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "941:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "952:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "937:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "937:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "961:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "908:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "908:61:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "898:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "752:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "763:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "775:6:4",
                "type": ""
              }
            ],
            "src": "708:278:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1058:196:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1104:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1113:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1116:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1106:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1106:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1106:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1079:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1088:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1075:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1075:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1100:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1071:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1071:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1068:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1130:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1145:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1159:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1149:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1174:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1209:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1220:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1205:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1205:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1229:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1184:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1184:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1174:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1028:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1039:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1051:6:4",
                "type": ""
              }
            ],
            "src": "992:262:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1325:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1342:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1365:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1347:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1347:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1335:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1335:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1335:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1313:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1320:3:4",
                "type": ""
              }
            ],
            "src": "1260:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1443:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1460:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1480:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1465:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1465:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1453:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1453:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1453:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1431:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1438:3:4",
                "type": ""
              }
            ],
            "src": "1384:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1580:82:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1597:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1649:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_DaiToken_$180_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1602:46:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1602:53:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1590:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1590:66:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1590:66:4"
                }
              ]
            },
            "name": "abi_encode_t_contract$_DaiToken_$180_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1568:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1575:3:4",
                "type": ""
              }
            ],
            "src": "1499:163:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1750:83:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1767:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1820:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_DappToken_$361_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1772:47:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1772:54:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1760:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1760:67:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1760:67:4"
                }
              ]
            },
            "name": "abi_encode_t_contract$_DappToken_$361_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1738:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1745:3:4",
                "type": ""
              }
            ],
            "src": "1668:165:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1931:272:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1941:53:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1988:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1955:32:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1955:39:4"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1945:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2003:78:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2069:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2074:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2010:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2010:71:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2003:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2116:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2123:4:4",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2112:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2112:16:4"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2130:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2135:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2090:21:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2090:52:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2090:52:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2151:46:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2162:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2189:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2167:21:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2167:29:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2158:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2158:39:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2151:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1912:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1919:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1927:3:4",
                "type": ""
              }
            ],
            "src": "1839:364:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2355:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2365:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2431:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2436:2:4",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2372:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2372:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2365:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2537:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b",
                      "nodeType": "YulIdentifier",
                      "src": "2448:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2448:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2448:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2550:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2561:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2566:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2557:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2550:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2343:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2351:3:4",
                "type": ""
              }
            ],
            "src": "2209:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2727:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2737:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2803:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2808:2:4",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2744:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2744:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2737:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2909:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
                      "nodeType": "YulIdentifier",
                      "src": "2820:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2820:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2820:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2922:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2933:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2938:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2929:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2922:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2715:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2723:3:4",
                "type": ""
              }
            ],
            "src": "2581:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3099:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3109:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3175:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3180:2:4",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3116:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3116:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3109:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3281:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                      "nodeType": "YulIdentifier",
                      "src": "3192:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3192:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3192:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3294:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3305:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3310:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3301:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3301:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3294:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3087:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3095:3:4",
                "type": ""
              }
            ],
            "src": "2953:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3390:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3407:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3430:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3412:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3412:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3400:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3400:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3400:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3378:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3385:3:4",
                "type": ""
              }
            ],
            "src": "3325:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3547:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3557:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3569:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3580:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3565:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3565:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3557:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3637:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3650:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3661:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3646:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3646:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3593:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3593:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3593:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3519:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3531:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3542:4:4",
                "type": ""
              }
            ],
            "src": "3449:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3831:288:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3841:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3853:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3864:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3849:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3849:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3841:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3921:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3934:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3945:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3930:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3930:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3877:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3877:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3877:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4002:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4015:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4026:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4011:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4011:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3958:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3958:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3958:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4084:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4097:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4108:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4093:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4093:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4040:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4040:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4040:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3787:9:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3799:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3807:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3815:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3826:4:4",
                "type": ""
              }
            ],
            "src": "3677:442:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4251:206:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4261:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4273:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4284:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4269:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4269:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4261:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4341:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4354:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4365:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4350:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4350:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4297:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4297:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4297:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4422:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4435:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4446:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4431:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4431:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4378:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4378:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4378:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4215:9:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4227:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4235:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4246:4:4",
                "type": ""
              }
            ],
            "src": "4125:332:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4555:118:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4565:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4577:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4588:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4573:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4573:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4565:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4639:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4652:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4663:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4648:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4648:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4601:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4601:65:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4601:65:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4527:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4539:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4550:4:4",
                "type": ""
              }
            ],
            "src": "4463:210:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4793:140:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4803:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4815:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4826:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4811:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4811:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4803:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4899:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4912:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4923:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4908:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4908:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_DaiToken_$180_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4839:59:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4839:87:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4839:87:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaiToken_$180__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4765:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4777:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4788:4:4",
                "type": ""
              }
            ],
            "src": "4679:254:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5054:141:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5064:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5076:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5087:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5072:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5072:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5064:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5161:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5174:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5185:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5170:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5170:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_DappToken_$361_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5100:60:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5100:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5100:88:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DappToken_$361__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5026:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5038:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5049:4:4",
                "type": ""
              }
            ],
            "src": "4939:256:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5319:195:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5329:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5341:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5352:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5337:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5337:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5329:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5376:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5387:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5372:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5372:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5395:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5401:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5391:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5391:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5365:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5365:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5365:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5421:86:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5493:6:4"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5502:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5429:63:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5429:78:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5421:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5291:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5303:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5314:4:4",
                "type": ""
              }
            ],
            "src": "5201:313:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5691:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5701:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5713:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5724:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5709:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5709:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5701:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5748:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5759:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5744:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5744:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5767:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5773:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5763:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5763:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5737:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5737:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5737:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5793:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5927:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5801:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5801:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5793:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5671:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5686:4:4",
                "type": ""
              }
            ],
            "src": "5520:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6116:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6126:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6138:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6149:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6134:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6134:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6126:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6173:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6184:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6169:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6169:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6192:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6198:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6188:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6188:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6162:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6162:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6162:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6218:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6352:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6226:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6226:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6218:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6096:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6111:4:4",
                "type": ""
              }
            ],
            "src": "5945:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6541:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6551:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6563:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6574:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6559:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6559:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6551:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6598:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6609:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6594:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6594:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6617:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6623:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6613:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6613:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6587:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6587:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6587:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6643:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6777:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6651:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6651:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6643:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6521:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6536:4:4",
                "type": ""
              }
            ],
            "src": "6370:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6893:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6903:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6915:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6926:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6911:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6911:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6903:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6983:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6996:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7007:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6992:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6992:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6939:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6939:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6939:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6865:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6877:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6888:4:4",
                "type": ""
              }
            ],
            "src": "6795:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7082:40:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7093:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7109:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7103:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7103:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7093:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7065:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7075:6:4",
                "type": ""
              }
            ],
            "src": "7023:99:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7224:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7241:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7246:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7234:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7234:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7234:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7262:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7281:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7286:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7277:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7277:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7262:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7196:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7201:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7212:11:4",
                "type": ""
              }
            ],
            "src": "7128:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7347:261:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7357:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7380:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7362:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7362:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7357:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7391:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7414:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7396:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7396:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7391:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7554:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7556:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7556:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7556:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7475:1:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7482:66:4",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7550:1:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7478:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7478:74:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7472:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7472:81:4"
                  },
                  "nodeType": "YulIf",
                  "src": "7469:2:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7586:16:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7597:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7600:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7593:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7593:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7586:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7334:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7337:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7343:3:4",
                "type": ""
              }
            ],
            "src": "7303:305:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7659:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7669:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7698:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7680:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7680:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7669:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7641:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7651:7:4",
                "type": ""
              }
            ],
            "src": "7614:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7758:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7768:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7793:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7786:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7786:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7779:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7779:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7768:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7740:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7750:7:4",
                "type": ""
              }
            ],
            "src": "7716:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7857:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7867:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7882:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7889:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7878:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7878:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7867:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7839:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7849:7:4",
                "type": ""
              }
            ],
            "src": "7812:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7989:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7999:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8010:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7999:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7971:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7981:7:4",
                "type": ""
              }
            ],
            "src": "7944:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8103:82:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8113:66:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8173:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_DaiToken_$180_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8126:46:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8126:53:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8113:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_DaiToken_$180_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8083:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8093:9:4",
                "type": ""
              }
            ],
            "src": "8027:158:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8267:53:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8277:37:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8308:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8290:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8290:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8277:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_DaiToken_$180_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8247:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8257:9:4",
                "type": ""
              }
            ],
            "src": "8191:129:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8403:83:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8413:67:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8474:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_DappToken_$361_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8426:47:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8426:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8413:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_DappToken_$361_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8383:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8393:9:4",
                "type": ""
              }
            ],
            "src": "8326:160:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8569:53:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8579:37:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8610:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8592:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8592:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8579:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_DappToken_$361_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8549:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8559:9:4",
                "type": ""
              }
            ],
            "src": "8492:130:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8677:258:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8687:10:4",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8696:1:4",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8691:1:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8756:63:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8781:3:4"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8786:1:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8777:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8777:11:4"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8800:3:4"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8805:1:4"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8796:3:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8796:11:4"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8790:5:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8790:18:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8770:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8770:39:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8770:39:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8717:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8720:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8714:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8714:13:4"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8728:19:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8730:15:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8739:1:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8742:2:4",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8735:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8735:10:4"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8730:1:4"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8710:3:4",
                    "statements": []
                  },
                  "src": "8706:113:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8853:76:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8903:3:4"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "8908:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8899:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8899:16:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8917:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8892:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8892:27:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8892:27:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8834:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8837:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8831:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8831:13:4"
                  },
                  "nodeType": "YulIf",
                  "src": "8828:2:4"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8659:3:4",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8664:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8669:6:4",
                "type": ""
              }
            ],
            "src": "8628:307:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8992:269:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9002:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9016:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9022:1:4",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9012:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9012:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9002:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9033:38:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9063:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9069:1:4",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9059:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9059:12:4"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "9037:18:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9110:51:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9124:27:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "9138:6:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9146:4:4",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9134:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9134:17:4"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9124:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9090:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9083:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9083:26:4"
                  },
                  "nodeType": "YulIf",
                  "src": "9080:2:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9213:42:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "9227:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9227:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9227:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9177:18:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9200:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9208:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "9197:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9197:14:4"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9174:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9174:38:4"
                  },
                  "nodeType": "YulIf",
                  "src": "9171:2:4"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8976:4:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8985:6:4",
                "type": ""
              }
            ],
            "src": "8941:320:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9310:190:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9320:33:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9347:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9329:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9329:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9320:5:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9443:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9445:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9445:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9445:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9368:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9375:66:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9365:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9365:77:4"
                  },
                  "nodeType": "YulIf",
                  "src": "9362:2:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9474:20:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9485:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9492:1:4",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9481:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9481:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9474:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9296:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9306:3:4",
                "type": ""
              }
            ],
            "src": "9267:233:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9534:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9551:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9554:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9544:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9544:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9544:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9648:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9651:4:4",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9641:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9641:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9641:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9672:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9675:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9665:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9665:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9665:15:4"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9506:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9720:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9737:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9740:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9730:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9730:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9730:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9834:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9837:4:4",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9827:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9827:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9827:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9858:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9861:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9851:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9851:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9851:15:4"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "9692:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9926:54:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9936:38:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9954:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9961:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9950:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9950:14:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9970:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9966:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9966:7:4"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9946:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9946:28:4"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "9936:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9909:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "9919:6:4",
                "type": ""
              }
            ],
            "src": "9878:102:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10092:68:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10114:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10122:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10110:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10110:14:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10126:26:4",
                        "type": "",
                        "value": "caller must be the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10103:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10103:50:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10103:50:4"
                }
              ]
            },
            "name": "store_literal_in_memory_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10084:6:4",
                "type": ""
              }
            ],
            "src": "9986:174:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10272:71:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10294:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10302:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10290:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10290:14:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10306:29:4",
                        "type": "",
                        "value": "staking balance cannot be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10283:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10283:53:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10283:53:4"
                }
              ]
            },
            "name": "store_literal_in_memory_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10264:6:4",
                "type": ""
              }
            ],
            "src": "10166:177:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10455:62:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10477:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10485:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10473:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10473:14:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10489:20:4",
                        "type": "",
                        "value": "amount cannot be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10466:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10466:44:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10466:44:4"
                }
              ]
            },
            "name": "store_literal_in_memory_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10447:6:4",
                "type": ""
              }
            ],
            "src": "10349:168:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10566:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10623:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10632:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10635:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10625:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10625:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10625:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10589:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10614:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10596:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10596:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10586:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10586:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10579:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10579:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "10576:2:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10559:5:4",
                "type": ""
              }
            ],
            "src": "10523:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10691:76:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10745:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10754:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10757:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10747:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10747:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10747:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10714:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10736:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10721:14:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10721:21:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10711:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10711:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10704:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10704:40:4"
                  },
                  "nodeType": "YulIf",
                  "src": "10701:2:4"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10684:5:4",
                "type": ""
              }
            ],
            "src": "10651:116:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10816:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10873:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10882:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10885:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10875:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10875:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10875:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10839:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10864:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "10846:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10846:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10836:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10836:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10829:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10829:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "10826:2:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10809:5:4",
                "type": ""
              }
            ],
            "src": "10773:122:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_DaiToken_$180_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_DaiToken_$180_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_DappToken_$361_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_DappToken_$361_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_DaiToken_$180__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_DaiToken_$180_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_DappToken_$361__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_DappToken_$361_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_DaiToken_$180_to_t_address(value) -> converted {\n        converted := convert_t_contract$_DaiToken_$180_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_DaiToken_$180_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_DappToken_$361_to_t_address(value) -> converted {\n        converted := convert_t_contract$_DappToken_$361_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_DappToken_$361_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"caller must be the owner\")\n\n    }\n\n    function store_literal_in_memory_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba(memPtr) {\n\n        mstore(add(memPtr, 0), \"staking balance cannot be 0\")\n\n    }\n\n    function store_literal_in_memory_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount cannot be 0\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "109:2150:3:-:0;;;134:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;444:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;520:10;508:9;;:22;;;;;;;;;;;;;;;;;;551:9;540:8;;:20;;;;;;;;;;;;;;;;;;578:10;570:5;;:18;;;;;;;;;;;;;;;;;;444:151;;109:2150;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:175:4:-;;111:6;105:13;96:22;;127:49;170:5;127:49;:::i;:::-;86:96;;;;:::o;188:177::-;;293:6;287:13;278:22;;309:50;353:5;309:50;:::i;:::-;268:97;;;;:::o;371:506::-;;;540:2;528:9;519:7;515:23;511:32;508:2;;;556:1;553;546:12;508:2;599:1;624:81;697:7;688:6;677:9;673:22;624:81;:::i;:::-;614:91;;570:145;754:2;780:80;852:7;843:6;832:9;828:22;780:80;:::i;:::-;770:90;;725:145;498:379;;;;;:::o;883:96::-;;949:24;967:5;949:24;:::i;:::-;938:35;;928:51;;;:::o;985:112::-;;1067:24;1085:5;1067:24;:::i;:::-;1056:35;;1046:51;;;:::o;1103:113::-;;1186:24;1204:5;1186:24;:::i;:::-;1175:35;;1165:51;;;:::o;1222:126::-;;1299:42;1292:5;1288:54;1277:65;;1267:81;;;:::o;1354:320::-;;1435:1;1429:4;1425:12;1415:22;;1482:1;1476:4;1472:12;1503:18;1493:2;;1559:4;1551:6;1547:17;1537:27;;1493:2;1621;1613:6;1610:14;1590:18;1587:38;1584:2;;;1640:18;;:::i;:::-;1584:2;1405:269;;;;:::o;1680:180::-;1728:77;1725:1;1718:88;1825:4;1822:1;1815:15;1849:4;1846:1;1839:15;1866:154;1955:40;1989:5;1955:40;:::i;:::-;1948:5;1945:51;1935:2;;2010:1;2007;2000:12;1935:2;1925:95;:::o;2026:156::-;2116:41;2151:5;2116:41;:::i;:::-;2109:5;2106:52;2096:2;;2172:1;2169;2162:12;2096:2;2086:96;:::o;109:2150:3:-;;;;;;;",
  "deployedSourceMap": "109:2150:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;134:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;297:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;204:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1813:444;;;:::i;:::-;;396:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;601:656;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;178:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1298:487;;;:::i;:::-;;236:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;349:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;267:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;134:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;297:46::-;;;;;;;;;;;;;;;;;:::o;204:26::-;;;;;;;;;;;;;:::o;1813:444::-;1920:5;;;;;;;;;;;1906:19;;:10;:19;;;1898:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:6;2004:247;2021:7;:14;;;;2019:1;:16;2004:247;;;2056:17;2076:7;2084:1;2076:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:30;;2100:12;2115:14;:25;2130:9;2115:25;;;;;;;;;;;;;;;;2100:40;;2167:1;2157:7;:11;2154:87;;;2188:9;;;;;;;;;;;:18;;;2207:9;2218:7;2188:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2154:87;2004:247;;2037:3;;;;;:::i;:::-;;;;2004:247;;;;1813:444::o;396:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;601:656::-;712:1;702:7;:11;694:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;812:8;;;;;;;;;;;:21;;;834:10;854:4;861:7;812:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;972:7;943:14;:26;958:10;943:26;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;914:14;:26;929:10;914:26;;;;;;;;;;;;;;;:65;;;;1069:9;:21;1079:10;1069:21;;;;;;;;;;;;;;;;;;;;;;;;;1065:76;;1106:7;1119:10;1106:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1065:76;1208:4;1184:9;:21;1194:10;1184:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1246:4;1222:9;:21;1232:10;1222:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;601:656;:::o;178:20::-;;;;;;;;;;;;;:::o;1298:487::-;1373:12;1388:14;:26;1403:10;1388:26;;;;;;;;;;;;;;;;1373:41;;1484:1;1474:7;:11;1466:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1593:8;;;;;;;;;;;:17;;;1611:10;1623:7;1593:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1704:1;1675:14;:26;1690:10;1675:26;;;;;;;;;;;;;;;:30;;;;1773:5;1749:9;:21;1759:10;1749:21;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1298:487;:::o;236:24::-;;;;;;;;;;;;;:::o;349:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;267:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:4:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:278::-;;824:2;812:9;803:7;799:23;795:32;792:2;;;840:1;837;830:12;792:2;883:1;908:61;961:7;952:6;941:9;937:22;908:61;:::i;:::-;898:71;;854:125;782:204;;;;:::o;992:262::-;;1100:2;1088:9;1079:7;1075:23;1071:32;1068:2;;;1116:1;1113;1106:12;1068:2;1159:1;1184:53;1229:7;1220:6;1209:9;1205:22;1184:53;:::i;:::-;1174:63;;1130:117;1058:196;;;;:::o;1260:118::-;1347:24;1365:5;1347:24;:::i;:::-;1342:3;1335:37;1325:53;;:::o;1384:109::-;1465:21;1480:5;1465:21;:::i;:::-;1460:3;1453:34;1443:50;;:::o;1499:163::-;1602:53;1649:5;1602:53;:::i;:::-;1597:3;1590:66;1580:82;;:::o;1668:165::-;1772:54;1820:5;1772:54;:::i;:::-;1767:3;1760:67;1750:83;;:::o;1839:364::-;;1955:39;1988:5;1955:39;:::i;:::-;2010:71;2074:6;2069:3;2010:71;:::i;:::-;2003:78;;2090:52;2135:6;2130:3;2123:4;2116:5;2112:16;2090:52;:::i;:::-;2167:29;2189:6;2167:29;:::i;:::-;2162:3;2158:39;2151:46;;1931:272;;;;;:::o;2209:366::-;;2372:67;2436:2;2431:3;2372:67;:::i;:::-;2365:74;;2448:93;2537:3;2448:93;:::i;:::-;2566:2;2561:3;2557:12;2550:19;;2355:220;;;:::o;2581:366::-;;2744:67;2808:2;2803:3;2744:67;:::i;:::-;2737:74;;2820:93;2909:3;2820:93;:::i;:::-;2938:2;2933:3;2929:12;2922:19;;2727:220;;;:::o;2953:366::-;;3116:67;3180:2;3175:3;3116:67;:::i;:::-;3109:74;;3192:93;3281:3;3192:93;:::i;:::-;3310:2;3305:3;3301:12;3294:19;;3099:220;;;:::o;3325:118::-;3412:24;3430:5;3412:24;:::i;:::-;3407:3;3400:37;3390:53;;:::o;3449:222::-;;3580:2;3569:9;3565:18;3557:26;;3593:71;3661:1;3650:9;3646:17;3637:6;3593:71;:::i;:::-;3547:124;;;;:::o;3677:442::-;;3864:2;3853:9;3849:18;3841:26;;3877:71;3945:1;3934:9;3930:17;3921:6;3877:71;:::i;:::-;3958:72;4026:2;4015:9;4011:18;4002:6;3958:72;:::i;:::-;4040;4108:2;4097:9;4093:18;4084:6;4040:72;:::i;:::-;3831:288;;;;;;:::o;4125:332::-;;4284:2;4273:9;4269:18;4261:26;;4297:71;4365:1;4354:9;4350:17;4341:6;4297:71;:::i;:::-;4378:72;4446:2;4435:9;4431:18;4422:6;4378:72;:::i;:::-;4251:206;;;;;:::o;4463:210::-;;4588:2;4577:9;4573:18;4565:26;;4601:65;4663:1;4652:9;4648:17;4639:6;4601:65;:::i;:::-;4555:118;;;;:::o;4679:254::-;;4826:2;4815:9;4811:18;4803:26;;4839:87;4923:1;4912:9;4908:17;4899:6;4839:87;:::i;:::-;4793:140;;;;:::o;4939:256::-;;5087:2;5076:9;5072:18;5064:26;;5100:88;5185:1;5174:9;5170:17;5161:6;5100:88;:::i;:::-;5054:141;;;;:::o;5201:313::-;;5352:2;5341:9;5337:18;5329:26;;5401:9;5395:4;5391:20;5387:1;5376:9;5372:17;5365:47;5429:78;5502:4;5493:6;5429:78;:::i;:::-;5421:86;;5319:195;;;;:::o;5520:419::-;;5724:2;5713:9;5709:18;5701:26;;5773:9;5767:4;5763:20;5759:1;5748:9;5744:17;5737:47;5801:131;5927:4;5801:131;:::i;:::-;5793:139;;5691:248;;;:::o;5945:419::-;;6149:2;6138:9;6134:18;6126:26;;6198:9;6192:4;6188:20;6184:1;6173:9;6169:17;6162:47;6226:131;6352:4;6226:131;:::i;:::-;6218:139;;6116:248;;;:::o;6370:419::-;;6574:2;6563:9;6559:18;6551:26;;6623:9;6617:4;6613:20;6609:1;6598:9;6594:17;6587:47;6651:131;6777:4;6651:131;:::i;:::-;6643:139;;6541:248;;;:::o;6795:222::-;;6926:2;6915:9;6911:18;6903:26;;6939:71;7007:1;6996:9;6992:17;6983:6;6939:71;:::i;:::-;6893:124;;;;:::o;7023:99::-;;7109:5;7103:12;7093:22;;7082:40;;;:::o;7128:169::-;;7246:6;7241:3;7234:19;7286:4;7281:3;7277:14;7262:29;;7224:73;;;;:::o;7303:305::-;;7362:20;7380:1;7362:20;:::i;:::-;7357:25;;7396:20;7414:1;7396:20;:::i;:::-;7391:25;;7550:1;7482:66;7478:74;7475:1;7472:81;7469:2;;;7556:18;;:::i;:::-;7469:2;7600:1;7597;7593:9;7586:16;;7347:261;;;;:::o;7614:96::-;;7680:24;7698:5;7680:24;:::i;:::-;7669:35;;7659:51;;;:::o;7716:90::-;;7793:5;7786:13;7779:21;7768:32;;7758:48;;;:::o;7812:126::-;;7889:42;7882:5;7878:54;7867:65;;7857:81;;;:::o;7944:77::-;;8010:5;7999:16;;7989:32;;;:::o;8027:158::-;;8126:53;8173:5;8126:53;:::i;:::-;8113:66;;8103:82;;;:::o;8191:129::-;;8290:24;8308:5;8290:24;:::i;:::-;8277:37;;8267:53;;;:::o;8326:160::-;;8426:54;8474:5;8426:54;:::i;:::-;8413:67;;8403:83;;;:::o;8492:130::-;;8592:24;8610:5;8592:24;:::i;:::-;8579:37;;8569:53;;;:::o;8628:307::-;8696:1;8706:113;8720:6;8717:1;8714:13;8706:113;;;8805:1;8800:3;8796:11;8790:18;8786:1;8781:3;8777:11;8770:39;8742:2;8739:1;8735:10;8730:15;;8706:113;;;8837:6;8834:1;8831:13;8828:2;;;8917:1;8908:6;8903:3;8899:16;8892:27;8828:2;8677:258;;;;:::o;8941:320::-;;9022:1;9016:4;9012:12;9002:22;;9069:1;9063:4;9059:12;9090:18;9080:2;;9146:4;9138:6;9134:17;9124:27;;9080:2;9208;9200:6;9197:14;9177:18;9174:38;9171:2;;;9227:18;;:::i;:::-;9171:2;8992:269;;;;:::o;9267:233::-;;9329:24;9347:5;9329:24;:::i;:::-;9320:33;;9375:66;9368:5;9365:77;9362:2;;;9445:18;;:::i;:::-;9362:2;9492:1;9485:5;9481:13;9474:20;;9310:190;;;:::o;9506:180::-;9554:77;9551:1;9544:88;9651:4;9648:1;9641:15;9675:4;9672:1;9665:15;9692:180;9740:77;9737:1;9730:88;9837:4;9834:1;9827:15;9861:4;9858:1;9851:15;9878:102;;9970:2;9966:7;9961:2;9954:5;9950:14;9946:28;9936:38;;9926:54;;;:::o;9986:174::-;10126:26;10122:1;10114:6;10110:14;10103:50;10092:68;:::o;10166:177::-;10306:29;10302:1;10294:6;10290:14;10283:53;10272:71;:::o;10349:168::-;10489:20;10485:1;10477:6;10473:14;10466:44;10455:62;:::o;10523:122::-;10596:24;10614:5;10596:24;:::i;:::-;10589:5;10586:35;10576:2;;10635:1;10632;10625:12;10576:2;10566:79;:::o;10651:116::-;10721:21;10736:5;10721:21;:::i;:::-;10714:5;10711:32;10701:2;;10757:1;10754;10747:12;10701:2;10691:76;:::o;10773:122::-;10846:24;10864:5;10846:24;:::i;:::-;10839:5;10836:35;10826:2;;10885:1;10882;10875:12;10826:2;10816:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./DappToken.sol\";\nimport \"./DaiToken.sol\";\n\ncontract TokenFarm {\n    string public name = \"Dapp Token Farm\";\n    address public owner;\n    DappToken public dappToken;\n    DaiToken public daiToken;\n\n    address[] public stakers;\n    mapping(address => uint) public stakingBalance;\n    mapping(address => bool) public hasStaked;\n    mapping(address => bool) public isStaking;\n\n    constructor(DappToken _dappToken, DaiToken _daiToken) {\n        dappToken = _dappToken;\n        daiToken = _daiToken;\n        owner = msg.sender;\n    }\n\n    function stakeTokens(uint _amount) public {\n        // Require amount greater than 0\n        require(_amount > 0, \"amount cannot be 0\");\n\n        // Trasnfer Mock Dai tokens to this contract for staking\n        daiToken.transferFrom(msg.sender, address(this), _amount);\n\n        // Update staking balance\n        stakingBalance[msg.sender] = stakingBalance[msg.sender] + _amount;\n\n        // Add user to stakers array *only* if they haven't staked already\n        if(!hasStaked[msg.sender]) {\n            stakers.push(msg.sender);\n        }\n\n        // Update staking status\n        isStaking[msg.sender] = true;\n        hasStaked[msg.sender] = true;\n    }\n\n    // Unstaking Tokens (Withdraw)\n    function unstakeTokens() public {\n        // Fetch staking balance\n        uint balance = stakingBalance[msg.sender];\n\n        // Require amount greater than 0\n        require(balance > 0, \"staking balance cannot be 0\");\n\n        // Transfer Mock Dai tokens to this contract for staking\n        daiToken.transfer(msg.sender, balance);\n\n        // Reset staking balance\n        stakingBalance[msg.sender] = 0;\n\n        // Update staking status\n        isStaking[msg.sender] = false;\n    }\n\n    // Issuing Tokens\n    function issueTokens() public {\n        // Only owner can call this function\n        require(msg.sender == owner, \"caller must be the owner\");\n\n        // Issue tokens to all stakers\n        for (uint i=0; i<stakers.length; i++) {\n            address recipient = stakers[i];\n            uint balance = stakingBalance[recipient];\n            if(balance > 0) {\n                dappToken.transfer(recipient, balance);\n            }\n        }\n    }\n}\n",
  "sourcePath": "D:/Projects/Solidity/Stake coin Defi App/src/contracts/TokenFarm.sol",
  "ast": {
    "absolutePath": "/D/Projects/Solidity/Stake coin Defi App/src/contracts/TokenFarm.sol",
    "exportedSymbols": {
      "DaiToken": [
        180
      ],
      "DappToken": [
        361
      ],
      "TokenFarm": [
        627
      ]
    },
    "id": 628,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 421,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "/D/Projects/Solidity/Stake coin Defi App/src/contracts/DappToken.sol",
        "file": "./DappToken.sol",
        "id": 422,
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 362,
        "src": "57:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Projects/Solidity/Stake coin Defi App/src/contracts/DaiToken.sol",
        "file": "./DaiToken.sol",
        "id": 423,
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 181,
        "src": "83:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 627,
        "linearizedBaseContracts": [
          627
        ],
        "name": "TokenFarm",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 426,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "134:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 424,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "134:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4461707020546f6b656e204661726d",
              "id": 425,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "155:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_112892b16fc49edc60aefbde9609f7bfe1cf220ba7ef93ec6845dbc0b0b30cd5",
                "typeString": "literal_string \"Dapp Token Farm\""
              },
              "value": "Dapp Token Farm"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 428,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "178:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 427,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "178:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5eb186f8",
            "id": 431,
            "mutability": "mutable",
            "name": "dappToken",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "204:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DappToken_$361",
              "typeString": "contract DappToken"
            },
            "typeName": {
              "id": 430,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 429,
                "name": "DappToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 361,
                "src": "204:9:3"
              },
              "referencedDeclaration": 361,
              "src": "204:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DappToken_$361",
                "typeString": "contract DappToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 434,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "236:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DaiToken_$180",
              "typeString": "contract DaiToken"
            },
            "typeName": {
              "id": 433,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 432,
                "name": "DaiToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 180,
                "src": "236:8:3"
              },
              "referencedDeclaration": 180,
              "src": "236:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DaiToken_$180",
                "typeString": "contract DaiToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 437,
            "mutability": "mutable",
            "name": "stakers",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "267:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 435,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "267:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 436,
              "nodeType": "ArrayTypeName",
              "src": "267:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "45bc78ab",
            "id": 441,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "297:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 440,
              "keyType": {
                "id": 438,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "305:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "297:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 439,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "316:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c93c8f34",
            "id": 445,
            "mutability": "mutable",
            "name": "hasStaked",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "349:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 444,
              "keyType": {
                "id": 442,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "357:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "349:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 443,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "368:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f49712b",
            "id": 449,
            "mutability": "mutable",
            "name": "isStaking",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "396:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 448,
              "keyType": {
                "id": 446,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "404:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "396:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 447,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "415:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "498:97:3",
              "statements": [
                {
                  "expression": {
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 458,
                      "name": "dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "508:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DappToken_$361",
                        "typeString": "contract DappToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 459,
                      "name": "_dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "520:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DappToken_$361",
                        "typeString": "contract DappToken"
                      }
                    },
                    "src": "508:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DappToken_$361",
                      "typeString": "contract DappToken"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "508:22:3"
                },
                {
                  "expression": {
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 462,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "540:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$180",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 463,
                      "name": "_daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "551:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$180",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "src": "540:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$180",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "540:20:3"
                },
                {
                  "expression": {
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 466,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 428,
                      "src": "570:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 467,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "578:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "578:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "570:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "570:18:3"
                }
              ]
            },
            "id": 472,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "_dappToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "456:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DappToken_$361",
                    "typeString": "contract DappToken"
                  },
                  "typeName": {
                    "id": 451,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 450,
                      "name": "DappToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 361,
                      "src": "456:9:3"
                    },
                    "referencedDeclaration": 361,
                    "src": "456:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DappToken_$361",
                      "typeString": "contract DappToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "_daiToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "478:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaiToken_$180",
                    "typeString": "contract DaiToken"
                  },
                  "typeName": {
                    "id": 454,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 453,
                      "name": "DaiToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 180,
                      "src": "478:8:3"
                    },
                    "referencedDeclaration": 180,
                    "src": "478:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$180",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:42:3"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:0:3"
            },
            "scope": 627,
            "src": "444:151:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 536,
              "nodeType": "Block",
              "src": "643:614:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 478,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "702:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "712:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "702:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742063616e6e6f742062652030",
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "715:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        },
                        "value": "amount cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        }
                      ],
                      "id": 477,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "694:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "694:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "834:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "834:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 491,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "854:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFarm_$627",
                              "typeString": "contract TokenFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFarm_$627",
                              "typeString": "contract TokenFarm"
                            }
                          ],
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "846:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 489,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "846:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "846:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 493,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "861:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 484,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "812:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$180",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 179,
                      "src": "812:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "812:57:3"
                },
                {
                  "expression": {
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 496,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "914:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 499,
                      "indexExpression": {
                        "expression": {
                          "id": 497,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "929:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "929:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "914:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 500,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "943:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 503,
                        "indexExpression": {
                          "expression": {
                            "id": 501,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "958:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "958:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "943:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 504,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "972:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "943:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "914:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "914:65:3"
                },
                {
                  "condition": {
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1068:22:3",
                    "subExpression": {
                      "baseExpression": {
                        "id": 508,
                        "name": "hasStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "1069:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 511,
                      "indexExpression": {
                        "expression": {
                          "id": 509,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1079:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1079:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1069:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 521,
                  "nodeType": "IfStatement",
                  "src": "1065:76:3",
                  "trueBody": {
                    "id": 520,
                    "nodeType": "Block",
                    "src": "1092:49:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 516,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1119:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1119:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 513,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "1106:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1106:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1106:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 519,
                        "nodeType": "ExpressionStatement",
                        "src": "1106:24:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 522,
                        "name": "isStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "1184:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 525,
                      "indexExpression": {
                        "expression": {
                          "id": 523,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1194:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1194:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1184:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1208:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1184:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:28:3"
                },
                {
                  "expression": {
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 529,
                        "name": "hasStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "1222:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 532,
                      "indexExpression": {
                        "expression": {
                          "id": 530,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1232:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1232:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1222:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1246:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1222:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:28:3"
                }
              ]
            },
            "functionSelector": "7547c7a3",
            "id": 537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "622:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:14:3"
            },
            "returnParameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:0:3"
            },
            "scope": 627,
            "src": "601:656:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "1330:455:3",
              "statements": [
                {
                  "assignments": [
                    541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 541,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 576,
                      "src": "1373:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 540,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1373:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 546,
                  "initialValue": {
                    "baseExpression": {
                      "id": 542,
                      "name": "stakingBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "1388:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 545,
                    "indexExpression": {
                      "expression": {
                        "id": 543,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1403:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1403:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1388:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1373:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 548,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 541,
                          "src": "1474:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1484:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1474:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7374616b696e672062616c616e63652063616e6e6f742062652030",
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1487:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
                          "typeString": "literal_string \"staking balance cannot be 0\""
                        },
                        "value": "staking balance cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
                          "typeString": "literal_string \"staking balance cannot be 0\""
                        }
                      ],
                      "id": 547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1466:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "1466:51:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 557,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1611:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1611:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 559,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "1623:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 554,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "1593:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$180",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "1593:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:38:3"
                },
                {
                  "expression": {
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 562,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "1675:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 565,
                      "indexExpression": {
                        "expression": {
                          "id": 563,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1690:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1690:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1675:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1704:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1675:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:30:3"
                },
                {
                  "expression": {
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 569,
                        "name": "isStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "1749:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 572,
                      "indexExpression": {
                        "expression": {
                          "id": 570,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1759:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1759:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1749:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1773:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1749:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "1749:29:3"
                }
              ]
            },
            "functionSelector": "a5ce413b",
            "id": 577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1320:2:3"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:0:3"
            },
            "scope": 627,
            "src": "1298:487:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "1843:414:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 581,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1906:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1906:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 583,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 428,
                          "src": "1920:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1906:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206d75737420626520746865206f776e6572",
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1927:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b",
                          "typeString": "literal_string \"caller must be the owner\""
                        },
                        "value": "caller must be the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b",
                          "typeString": "literal_string \"caller must be the owner\""
                        }
                      ],
                      "id": 580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1898:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:56:3"
                },
                {
                  "body": {
                    "id": 623,
                    "nodeType": "Block",
                    "src": "2042:209:3",
                    "statements": [
                      {
                        "assignments": [
                          600
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 600,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nodeType": "VariableDeclaration",
                            "scope": 623,
                            "src": "2056:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 599,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2056:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 604,
                        "initialValue": {
                          "baseExpression": {
                            "id": 601,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "2076:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 603,
                          "indexExpression": {
                            "id": 602,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "2084:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2076:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2056:30:3"
                      },
                      {
                        "assignments": [
                          606
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 606,
                            "mutability": "mutable",
                            "name": "balance",
                            "nodeType": "VariableDeclaration",
                            "scope": 623,
                            "src": "2100:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 605,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2100:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 610,
                        "initialValue": {
                          "baseExpression": {
                            "id": 607,
                            "name": "stakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 441,
                            "src": "2115:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 609,
                          "indexExpression": {
                            "id": 608,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "2130:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2115:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2100:40:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 611,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "2157:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2167:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2157:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 622,
                        "nodeType": "IfStatement",
                        "src": "2154:87:3",
                        "trueBody": {
                          "id": 621,
                          "nodeType": "Block",
                          "src": "2170:71:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 617,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 600,
                                    "src": "2207:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 618,
                                    "name": "balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 606,
                                    "src": "2218:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 614,
                                    "name": "dappToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 431,
                                    "src": "2188:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DappToken_$361",
                                      "typeString": "contract DappToken"
                                    }
                                  },
                                  "id": 616,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 272,
                                  "src": "2188:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2188:38:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 620,
                              "nodeType": "ExpressionStatement",
                              "src": "2188:38:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 592,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 589,
                      "src": "2019:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 593,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "2021:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2021:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2019:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 624,
                  "initializationExpression": {
                    "assignments": [
                      589
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 624,
                        "src": "2009:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 591,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2016:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2009:8:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2037:3:3",
                      "subExpression": {
                        "id": 596,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "2037:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 598,
                    "nodeType": "ExpressionStatement",
                    "src": "2037:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "2004:247:3"
                }
              ]
            },
            "functionSelector": "60ab5852",
            "id": 626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1833:2:3"
            },
            "returnParameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1843:0:3"
            },
            "scope": 627,
            "src": "1813:444:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 628,
        "src": "109:2150:3"
      }
    ],
    "src": "32:2228:3"
  },
  "legacyAST": {
    "absolutePath": "/D/Projects/Solidity/Stake coin Defi App/src/contracts/TokenFarm.sol",
    "exportedSymbols": {
      "DaiToken": [
        180
      ],
      "DappToken": [
        361
      ],
      "TokenFarm": [
        627
      ]
    },
    "id": 628,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 421,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "/D/Projects/Solidity/Stake coin Defi App/src/contracts/DappToken.sol",
        "file": "./DappToken.sol",
        "id": 422,
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 362,
        "src": "57:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Projects/Solidity/Stake coin Defi App/src/contracts/DaiToken.sol",
        "file": "./DaiToken.sol",
        "id": 423,
        "nodeType": "ImportDirective",
        "scope": 628,
        "sourceUnit": 181,
        "src": "83:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 627,
        "linearizedBaseContracts": [
          627
        ],
        "name": "TokenFarm",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 426,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "134:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 424,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "134:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4461707020546f6b656e204661726d",
              "id": 425,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "155:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_112892b16fc49edc60aefbde9609f7bfe1cf220ba7ef93ec6845dbc0b0b30cd5",
                "typeString": "literal_string \"Dapp Token Farm\""
              },
              "value": "Dapp Token Farm"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 428,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "178:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 427,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "178:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5eb186f8",
            "id": 431,
            "mutability": "mutable",
            "name": "dappToken",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "204:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DappToken_$361",
              "typeString": "contract DappToken"
            },
            "typeName": {
              "id": 430,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 429,
                "name": "DappToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 361,
                "src": "204:9:3"
              },
              "referencedDeclaration": 361,
              "src": "204:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DappToken_$361",
                "typeString": "contract DappToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 434,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "236:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DaiToken_$180",
              "typeString": "contract DaiToken"
            },
            "typeName": {
              "id": 433,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 432,
                "name": "DaiToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 180,
                "src": "236:8:3"
              },
              "referencedDeclaration": 180,
              "src": "236:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DaiToken_$180",
                "typeString": "contract DaiToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 437,
            "mutability": "mutable",
            "name": "stakers",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "267:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 435,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "267:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 436,
              "nodeType": "ArrayTypeName",
              "src": "267:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "45bc78ab",
            "id": 441,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "297:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 440,
              "keyType": {
                "id": 438,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "305:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "297:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 439,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "316:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c93c8f34",
            "id": 445,
            "mutability": "mutable",
            "name": "hasStaked",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "349:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 444,
              "keyType": {
                "id": 442,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "357:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "349:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 443,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "368:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f49712b",
            "id": 449,
            "mutability": "mutable",
            "name": "isStaking",
            "nodeType": "VariableDeclaration",
            "scope": 627,
            "src": "396:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 448,
              "keyType": {
                "id": 446,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "404:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "396:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 447,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "415:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "498:97:3",
              "statements": [
                {
                  "expression": {
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 458,
                      "name": "dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "508:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DappToken_$361",
                        "typeString": "contract DappToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 459,
                      "name": "_dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "520:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DappToken_$361",
                        "typeString": "contract DappToken"
                      }
                    },
                    "src": "508:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DappToken_$361",
                      "typeString": "contract DappToken"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "508:22:3"
                },
                {
                  "expression": {
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 462,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "540:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$180",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 463,
                      "name": "_daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "551:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$180",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "src": "540:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$180",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "540:20:3"
                },
                {
                  "expression": {
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 466,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 428,
                      "src": "570:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 467,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "578:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "578:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "570:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "570:18:3"
                }
              ]
            },
            "id": 472,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "_dappToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "456:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DappToken_$361",
                    "typeString": "contract DappToken"
                  },
                  "typeName": {
                    "id": 451,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 450,
                      "name": "DappToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 361,
                      "src": "456:9:3"
                    },
                    "referencedDeclaration": 361,
                    "src": "456:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DappToken_$361",
                      "typeString": "contract DappToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "_daiToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "478:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaiToken_$180",
                    "typeString": "contract DaiToken"
                  },
                  "typeName": {
                    "id": 454,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 453,
                      "name": "DaiToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 180,
                      "src": "478:8:3"
                    },
                    "referencedDeclaration": 180,
                    "src": "478:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$180",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:42:3"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:0:3"
            },
            "scope": 627,
            "src": "444:151:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 536,
              "nodeType": "Block",
              "src": "643:614:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 478,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "702:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "712:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "702:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742063616e6e6f742062652030",
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "715:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        },
                        "value": "amount cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        }
                      ],
                      "id": 477,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "694:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "694:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "834:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "834:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 491,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "854:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFarm_$627",
                              "typeString": "contract TokenFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFarm_$627",
                              "typeString": "contract TokenFarm"
                            }
                          ],
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "846:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 489,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "846:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "846:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 493,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "861:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 484,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "812:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$180",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 179,
                      "src": "812:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "812:57:3"
                },
                {
                  "expression": {
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 496,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "914:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 499,
                      "indexExpression": {
                        "expression": {
                          "id": 497,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "929:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "929:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "914:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 500,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "943:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 503,
                        "indexExpression": {
                          "expression": {
                            "id": 501,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "958:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "958:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "943:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 504,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "972:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "943:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "914:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "914:65:3"
                },
                {
                  "condition": {
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1068:22:3",
                    "subExpression": {
                      "baseExpression": {
                        "id": 508,
                        "name": "hasStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "1069:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 511,
                      "indexExpression": {
                        "expression": {
                          "id": 509,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1079:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1079:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1069:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 521,
                  "nodeType": "IfStatement",
                  "src": "1065:76:3",
                  "trueBody": {
                    "id": 520,
                    "nodeType": "Block",
                    "src": "1092:49:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 516,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1119:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1119:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 513,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "1106:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1106:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1106:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 519,
                        "nodeType": "ExpressionStatement",
                        "src": "1106:24:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 522,
                        "name": "isStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "1184:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 525,
                      "indexExpression": {
                        "expression": {
                          "id": 523,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1194:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1194:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1184:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1208:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1184:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:28:3"
                },
                {
                  "expression": {
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 529,
                        "name": "hasStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "1222:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 532,
                      "indexExpression": {
                        "expression": {
                          "id": 530,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1232:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1232:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1222:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1246:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1222:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:28:3"
                }
              ]
            },
            "functionSelector": "7547c7a3",
            "id": 537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "622:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:14:3"
            },
            "returnParameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:0:3"
            },
            "scope": 627,
            "src": "601:656:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "1330:455:3",
              "statements": [
                {
                  "assignments": [
                    541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 541,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 576,
                      "src": "1373:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 540,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1373:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 546,
                  "initialValue": {
                    "baseExpression": {
                      "id": 542,
                      "name": "stakingBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "1388:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 545,
                    "indexExpression": {
                      "expression": {
                        "id": 543,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1403:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1403:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1388:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1373:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 548,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 541,
                          "src": "1474:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1484:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1474:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7374616b696e672062616c616e63652063616e6e6f742062652030",
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1487:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
                          "typeString": "literal_string \"staking balance cannot be 0\""
                        },
                        "value": "staking balance cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
                          "typeString": "literal_string \"staking balance cannot be 0\""
                        }
                      ],
                      "id": 547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1466:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "1466:51:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 557,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1611:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1611:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 559,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "1623:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 554,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "1593:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$180",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "1593:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:38:3"
                },
                {
                  "expression": {
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 562,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "1675:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 565,
                      "indexExpression": {
                        "expression": {
                          "id": 563,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1690:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1690:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1675:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1704:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1675:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:30:3"
                },
                {
                  "expression": {
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 569,
                        "name": "isStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "1749:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 572,
                      "indexExpression": {
                        "expression": {
                          "id": 570,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1759:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1759:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1749:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1773:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1749:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "1749:29:3"
                }
              ]
            },
            "functionSelector": "a5ce413b",
            "id": 577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1320:2:3"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:0:3"
            },
            "scope": 627,
            "src": "1298:487:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "1843:414:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 581,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1906:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1906:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 583,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 428,
                          "src": "1920:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1906:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206d75737420626520746865206f776e6572",
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1927:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b",
                          "typeString": "literal_string \"caller must be the owner\""
                        },
                        "value": "caller must be the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3bfff96132c9b3295fc212b6fbfc1c5174f6f9be7b52a9aff62731c1d8706a0b",
                          "typeString": "literal_string \"caller must be the owner\""
                        }
                      ],
                      "id": 580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1898:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:56:3"
                },
                {
                  "body": {
                    "id": 623,
                    "nodeType": "Block",
                    "src": "2042:209:3",
                    "statements": [
                      {
                        "assignments": [
                          600
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 600,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nodeType": "VariableDeclaration",
                            "scope": 623,
                            "src": "2056:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 599,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2056:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 604,
                        "initialValue": {
                          "baseExpression": {
                            "id": 601,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "2076:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 603,
                          "indexExpression": {
                            "id": 602,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "2084:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2076:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2056:30:3"
                      },
                      {
                        "assignments": [
                          606
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 606,
                            "mutability": "mutable",
                            "name": "balance",
                            "nodeType": "VariableDeclaration",
                            "scope": 623,
                            "src": "2100:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 605,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2100:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 610,
                        "initialValue": {
                          "baseExpression": {
                            "id": 607,
                            "name": "stakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 441,
                            "src": "2115:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 609,
                          "indexExpression": {
                            "id": 608,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "2130:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2115:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2100:40:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 611,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "2157:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2167:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2157:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 622,
                        "nodeType": "IfStatement",
                        "src": "2154:87:3",
                        "trueBody": {
                          "id": 621,
                          "nodeType": "Block",
                          "src": "2170:71:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 617,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 600,
                                    "src": "2207:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 618,
                                    "name": "balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 606,
                                    "src": "2218:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 614,
                                    "name": "dappToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 431,
                                    "src": "2188:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DappToken_$361",
                                      "typeString": "contract DappToken"
                                    }
                                  },
                                  "id": 616,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 272,
                                  "src": "2188:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2188:38:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 620,
                              "nodeType": "ExpressionStatement",
                              "src": "2188:38:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 592,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 589,
                      "src": "2019:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 593,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "2021:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2021:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2019:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 624,
                  "initializationExpression": {
                    "assignments": [
                      589
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 624,
                        "src": "2009:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 591,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2016:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2009:8:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2037:3:3",
                      "subExpression": {
                        "id": 596,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "2037:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 598,
                    "nodeType": "ExpressionStatement",
                    "src": "2037:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "2004:247:3"
                }
              ]
            },
            "functionSelector": "60ab5852",
            "id": 626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1833:2:3"
            },
            "returnParameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1843:0:3"
            },
            "scope": 627,
            "src": "1813:444:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 628,
        "src": "109:2150:3"
      }
    ],
    "src": "32:2228:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0E032B20f7474A3958cC3d8D1331Da190A14e8a6",
      "transactionHash": "0x37445962ef955f631647fb8511a95276c317eb683aff860f18b3ceb6cfada1f2"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-05-28T13:12:25.718Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}